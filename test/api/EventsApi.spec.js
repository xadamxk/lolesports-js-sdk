/*
 * Lolesports Api
 * Unofficial documentation to the lolesports Api
 *
 * OpenAPI spec version: 1.0.0-alpha-1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.27
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.LolesportsApi);
  }
}(this, function(expect, LolesportsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new LolesportsApi.EventsApi();
  });

  describe('(package)', function() {
    describe('EventsApi', function() {
      describe('getCompletedEvents', function() {
        it('should call getCompletedEvents successfully', function(done) {
          // TODO: uncomment, update parameter values for getCompletedEvents call and complete the assertions
          /*
          var opts = {};

          instance.getCompletedEvents(hl, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(LolesportsApi.InlineResponse2005);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getEventDetails', function() {
        it('should call getEventDetails successfully', function(done) {
          // TODO: uncomment, update parameter values for getEventDetails call and complete the assertions
          /*

          instance.getEventDetails(hl, id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(LolesportsApi.InlineResponse2006);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getGames', function() {
        it('should call getGames successfully', function(done) {
          // TODO: uncomment, update parameter values for getGames call and complete the assertions
          /*
          var opts = {};

          instance.getGames(hl, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(LolesportsApi.InlineResponse2008);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getLive', function() {
        it('should call getLive successfully', function(done) {
          // TODO: uncomment, update parameter values for getLive call and complete the assertions
          /*

          instance.getLive(hl, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(LolesportsApi.InlineResponse2002);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getSchedule', function() {
        it('should call getSchedule successfully', function(done) {
          // TODO: uncomment, update parameter values for getSchedule call and complete the assertions
          /*
          var opts = {};

          instance.getSchedule(hl, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(LolesportsApi.InlineResponse2001);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
