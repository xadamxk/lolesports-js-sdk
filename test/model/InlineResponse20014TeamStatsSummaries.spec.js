/*
 * Lolesports Api
 * Unofficial documentation to the lolesports Api
 *
 * OpenAPI spec version: 1.0.0-alpha-1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.27
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.LolesportsApi);
  }
}(this, function(expect, LolesportsApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('InlineResponse20014TeamStatsSummaries', function() {
      beforeEach(function() {
        instance = new LolesportsApi.InlineResponse20014TeamStatsSummaries();
      });

      it('should create an instance of InlineResponse20014TeamStatsSummaries', function() {
        // TODO: update the code to test InlineResponse20014TeamStatsSummaries
        expect(instance).to.be.a(LolesportsApi.InlineResponse20014TeamStatsSummaries);
      });

      it('should have the property teamId (base name: "teamId")', function() {
        // TODO: update the code to test the property teamId
        expect(instance).to.have.property('teamId');
        // expect(instance.teamId).to.be(expectedValueLiteral);
      });

      it('should have the property kdaRatio (base name: "kdaRatio")', function() {
        // TODO: update the code to test the property kdaRatio
        expect(instance).to.have.property('kdaRatio');
        // expect(instance.kdaRatio).to.be(expectedValueLiteral);
      });

      it('should have the property kdaRatioRank (base name: "kdaRatioRank")', function() {
        // TODO: update the code to test the property kdaRatioRank
        expect(instance).to.have.property('kdaRatioRank');
        // expect(instance.kdaRatioRank).to.be(expectedValueLiteral);
      });

      it('should have the property averageWinLength (base name: "averageWinLength")', function() {
        // TODO: update the code to test the property averageWinLength
        expect(instance).to.have.property('averageWinLength');
        // expect(instance.averageWinLength).to.be(expectedValueLiteral);
      });

      it('should have the property averageWinLengthRank (base name: "averageWinLengthRank")', function() {
        // TODO: update the code to test the property averageWinLengthRank
        expect(instance).to.have.property('averageWinLengthRank');
        // expect(instance.averageWinLengthRank).to.be(expectedValueLiteral);
      });

      it('should have the property firstDragonKillRatio (base name: "firstDragonKillRatio")', function() {
        // TODO: update the code to test the property firstDragonKillRatio
        expect(instance).to.have.property('firstDragonKillRatio');
        // expect(instance.firstDragonKillRatio).to.be(expectedValueLiteral);
      });

      it('should have the property firstDragonKillRatioRank (base name: "firstDragonKillRatioRank")', function() {
        // TODO: update the code to test the property firstDragonKillRatioRank
        expect(instance).to.have.property('firstDragonKillRatioRank');
        // expect(instance.firstDragonKillRatioRank).to.be(expectedValueLiteral);
      });

      it('should have the property firstTowerRatio (base name: "firstTowerRatio")', function() {
        // TODO: update the code to test the property firstTowerRatio
        expect(instance).to.have.property('firstTowerRatio');
        // expect(instance.firstTowerRatio).to.be(expectedValueLiteral);
      });

      it('should have the property firstTowerRatioRank (base name: "firstTowerRatioRank")', function() {
        // TODO: update the code to test the property firstTowerRatioRank
        expect(instance).to.have.property('firstTowerRatioRank');
        // expect(instance.firstTowerRatioRank).to.be(expectedValueLiteral);
      });

      it('should have the property averageDamageByPosition (base name: "averageDamageByPosition")', function() {
        // TODO: update the code to test the property averageDamageByPosition
        expect(instance).to.have.property('averageDamageByPosition');
        // expect(instance.averageDamageByPosition).to.be(expectedValueLiteral);
      });

    });
  });

}));
