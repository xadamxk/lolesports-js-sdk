/*
 * Lolesports Api
 * Unofficial documentation to the lolesports Api
 *
 * OpenAPI spec version: 1.0.0-alpha-1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.27
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.LolesportsApi);
  }
}(this, function(expect, LolesportsApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('InlineResponse20014TeamRosterStats', function() {
      beforeEach(function() {
        instance = new LolesportsApi.InlineResponse20014TeamRosterStats();
      });

      it('should create an instance of InlineResponse20014TeamRosterStats', function() {
        // TODO: update the code to test InlineResponse20014TeamRosterStats
        expect(instance).to.be.a(LolesportsApi.InlineResponse20014TeamRosterStats);
      });

      it('should have the property playerId (base name: "playerId")', function() {
        // TODO: update the code to test the property playerId
        expect(instance).to.have.property('playerId');
        // expect(instance.playerId).to.be(expectedValueLiteral);
      });

      it('should have the property gamesPlayed (base name: "gamesPlayed")', function() {
        // TODO: update the code to test the property gamesPlayed
        expect(instance).to.have.property('gamesPlayed');
        // expect(instance.gamesPlayed).to.be(expectedValueLiteral);
      });

      it('should have the property averageAssists (base name: "averageAssists")', function() {
        // TODO: update the code to test the property averageAssists
        expect(instance).to.have.property('averageAssists');
        // expect(instance.averageAssists).to.be(expectedValueLiteral);
      });

      it('should have the property averageDeaths (base name: "averageDeaths")', function() {
        // TODO: update the code to test the property averageDeaths
        expect(instance).to.have.property('averageDeaths');
        // expect(instance.averageDeaths).to.be(expectedValueLiteral);
      });

      it('should have the property averageKillParticipation (base name: "averageKillParticipation")', function() {
        // TODO: update the code to test the property averageKillParticipation
        expect(instance).to.have.property('averageKillParticipation');
        // expect(instance.averageKillParticipation).to.be(expectedValueLiteral);
      });

      it('should have the property averageKills (base name: "averageKills")', function() {
        // TODO: update the code to test the property averageKills
        expect(instance).to.have.property('averageKills');
        // expect(instance.averageKills).to.be(expectedValueLiteral);
      });

      it('should have the property summonerName (base name: "summonerName")', function() {
        // TODO: update the code to test the property summonerName
        expect(instance).to.have.property('summonerName');
        // expect(instance.summonerName).to.be(expectedValueLiteral);
      });

      it('should have the property championIds (base name: "championIds")', function() {
        // TODO: update the code to test the property championIds
        expect(instance).to.have.property('championIds');
        // expect(instance.championIds).to.be(expectedValueLiteral);
      });

    });
  });

}));
