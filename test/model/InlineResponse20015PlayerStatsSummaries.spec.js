/*
 * Lolesports Api
 * Unofficial documentation to the lolesports Api
 *
 * OpenAPI spec version: 1.0.0-alpha-1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.27
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.LolesportsApi);
  }
}(this, function(expect, LolesportsApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('InlineResponse20015PlayerStatsSummaries', function() {
      beforeEach(function() {
        instance = new LolesportsApi.InlineResponse20015PlayerStatsSummaries();
      });

      it('should create an instance of InlineResponse20015PlayerStatsSummaries', function() {
        // TODO: update the code to test InlineResponse20015PlayerStatsSummaries
        expect(instance).to.be.a(LolesportsApi.InlineResponse20015PlayerStatsSummaries);
      });

      it('should have the property playerId (base name: "playerId")', function() {
        // TODO: update the code to test the property playerId
        expect(instance).to.have.property('playerId');
        // expect(instance.playerId).to.be(expectedValueLiteral);
      });

      it('should have the property kdaRatio (base name: "kdaRatio")', function() {
        // TODO: update the code to test the property kdaRatio
        expect(instance).to.have.property('kdaRatio');
        // expect(instance.kdaRatio).to.be(expectedValueLiteral);
      });

      it('should have the property kdaRatioRank (base name: "kdaRatioRank")', function() {
        // TODO: update the code to test the property kdaRatioRank
        expect(instance).to.have.property('kdaRatioRank');
        // expect(instance.kdaRatioRank).to.be(expectedValueLiteral);
      });

      it('should have the property csPerTenMinutes (base name: "csPerTenMinutes")', function() {
        // TODO: update the code to test the property csPerTenMinutes
        expect(instance).to.have.property('csPerTenMinutes');
        // expect(instance.csPerTenMinutes).to.be(expectedValueLiteral);
      });

      it('should have the property csPerTenMinutesRank (base name: "csPerTenMinutesRank")', function() {
        // TODO: update the code to test the property csPerTenMinutesRank
        expect(instance).to.have.property('csPerTenMinutesRank');
        // expect(instance.csPerTenMinutesRank).to.be(expectedValueLiteral);
      });

      it('should have the property killParticipation (base name: "killParticipation")', function() {
        // TODO: update the code to test the property killParticipation
        expect(instance).to.have.property('killParticipation');
        // expect(instance.killParticipation).to.be(expectedValueLiteral);
      });

      it('should have the property killParticipationRank (base name: "killParticipationRank")', function() {
        // TODO: update the code to test the property killParticipationRank
        expect(instance).to.have.property('killParticipationRank');
        // expect(instance.killParticipationRank).to.be(expectedValueLiteral);
      });

      it('should have the property mostplayedchampions (base name: "mostplayedchampions")', function() {
        // TODO: update the code to test the property mostplayedchampions
        expect(instance).to.have.property('mostplayedchampions');
        // expect(instance.mostplayedchampions).to.be(expectedValueLiteral);
      });

    });
  });

}));
