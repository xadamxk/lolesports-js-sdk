/*
 * Lolesports Api
 * Unofficial documentation to the lolesports Api
 *
 * OpenAPI spec version: 1.0.0-alpha-1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.27
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.LolesportsApi);
  }
}(this, function(expect, LolesportsApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('BaseParticipantStats', function() {
      beforeEach(function() {
        instance = new LolesportsApi.BaseParticipantStats();
      });

      it('should create an instance of BaseParticipantStats', function() {
        // TODO: update the code to test BaseParticipantStats
        expect(instance).to.be.a(LolesportsApi.BaseParticipantStats);
      });

      it('should have the property participantId (base name: "participantId")', function() {
        // TODO: update the code to test the property participantId
        expect(instance).to.have.property('participantId');
        // expect(instance.participantId).to.be(expectedValueLiteral);
      });

      it('should have the property level (base name: "level")', function() {
        // TODO: update the code to test the property level
        expect(instance).to.have.property('level');
        // expect(instance.level).to.be(expectedValueLiteral);
      });

      it('should have the property kills (base name: "kills")', function() {
        // TODO: update the code to test the property kills
        expect(instance).to.have.property('kills');
        // expect(instance.kills).to.be(expectedValueLiteral);
      });

      it('should have the property deaths (base name: "deaths")', function() {
        // TODO: update the code to test the property deaths
        expect(instance).to.have.property('deaths');
        // expect(instance.deaths).to.be(expectedValueLiteral);
      });

      it('should have the property assists (base name: "assists")', function() {
        // TODO: update the code to test the property assists
        expect(instance).to.have.property('assists');
        // expect(instance.assists).to.be(expectedValueLiteral);
      });

      it('should have the property creepScore (base name: "creepScore")', function() {
        // TODO: update the code to test the property creepScore
        expect(instance).to.have.property('creepScore');
        // expect(instance.creepScore).to.be(expectedValueLiteral);
      });

    });
  });

}));
