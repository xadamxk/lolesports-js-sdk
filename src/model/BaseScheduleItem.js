/*
 * Lolesports Api
 * Unofficial documentation to the lolesports Api
 *
 * OpenAPI spec version: 1.0.0-alpha-1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.27
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {Tags} from './Tags';

/**
 * The BaseScheduleItem model module.
 * @module model/BaseScheduleItem
 * @version 1.0.0-alpha-1
 */
export class BaseScheduleItem {
  /**
   * Constructs a new <code>BaseScheduleItem</code>.
   * @alias module:model/BaseScheduleItem
   * @class
   * @param id {String} The schedule item ID.
   * @param scheduledTime {Date} The time the match/event is/was scheduled to start.
   * @param tags {module:model/Tags} 
   * @param tournament {String} The tournament ID
   * @param league {String} The League ID
   */
  constructor(id, scheduledTime, tags, tournament, league) {
    this.id = id;
    this.scheduledTime = scheduledTime;
    this.tags = tags;
    this.tournament = tournament;
    this.league = league;
  }

  /**
   * Constructs a <code>BaseScheduleItem</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/BaseScheduleItem} obj Optional instance to populate.
   * @return {module:model/BaseScheduleItem} The populated <code>BaseScheduleItem</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new BaseScheduleItem();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('scheduledTime'))
        obj.scheduledTime = ApiClient.convertToType(data['scheduledTime'], 'Date');
      if (data.hasOwnProperty('tags'))
        obj.tags = Tags.constructFromObject(data['tags']);
      if (data.hasOwnProperty('tournament'))
        obj.tournament = ApiClient.convertToType(data['tournament'], 'String');
      if (data.hasOwnProperty('league'))
        obj.league = ApiClient.convertToType(data['league'], 'String');
    }
    return obj;
  }
}

/**
 * The schedule item ID.
 * @member {String} id
 */
BaseScheduleItem.prototype.id = undefined;

/**
 * The time the match/event is/was scheduled to start.
 * @member {Date} scheduledTime
 */
BaseScheduleItem.prototype.scheduledTime = undefined;

/**
 * @member {module:model/Tags} tags
 */
BaseScheduleItem.prototype.tags = undefined;

/**
 * The tournament ID
 * @member {String} tournament
 */
BaseScheduleItem.prototype.tournament = undefined;

/**
 * The League ID
 * @member {String} league
 */
BaseScheduleItem.prototype.league = undefined;

