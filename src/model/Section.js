/*
 * Lolesports Api
 * Unofficial documentation to the lolesports Api
 *
 * OpenAPI spec version: 1.0.0-alpha-1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.27
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {Ranking} from './Ranking';
import {AllOfsectionMatchesItems} from './AllOfsectionMatchesItems';

/**
 * The Section model module.
 * @module model/Section
 * @version 1.0.0-alpha-1
 */
export class Section {
  /**
   * Constructs a new <code>Section</code>.
   * @alias module:model/Section
   * @class
   * @param name {String} The name of the section
   * @param matches {Array.<Object>} 
   * @param rankings {Array.<module:model/Ranking>} Contains details about the actual standings for that particular section  This is mostly used for the group stage. For the knockout stages, it is usually empty. 
   */
  constructor(name, matches, rankings) {
    this.name = name;
    this.matches = matches;
    this.rankings = rankings;
  }

  /**
   * Constructs a <code>Section</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Section} obj Optional instance to populate.
   * @return {module:model/Section} The populated <code>Section</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Section();
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('matches'))
        obj.matches = ApiClient.convertToType(data['matches'], [AllOfsectionMatchesItems]);
      if (data.hasOwnProperty('rankings'))
        obj.rankings = ApiClient.convertToType(data['rankings'], [Ranking]);
    }
    return obj;
  }
}

/**
 * The name of the section
 * @member {String} name
 */
Section.prototype.name = undefined;

/**
 * @member {Array.<Object>} matches
 */
Section.prototype.matches = undefined;

/**
 * Contains details about the actual standings for that particular section  This is mostly used for the group stage. For the knockout stages, it is usually empty. 
 * @member {Array.<module:model/Ranking>} rankings
 */
Section.prototype.rankings = undefined;

