/*
 * Lolesports Api
 * Unofficial documentation to the lolesports Api
 *
 * OpenAPI spec version: 1.0.0-alpha-1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.27
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {Abilities} from './Abilities';
import {ParticipantStats} from './ParticipantStats';
import {PerkMetadata} from './PerkMetadata';

/**
 * The ExtendedParticipantStats model module.
 * @module model/ExtendedParticipantStats
 * @version 1.0.0-alpha-1
 */
export class ExtendedParticipantStats extends ParticipantStats {
  /**
   * Constructs a new <code>ExtendedParticipantStats</code>.
   * @alias module:model/ExtendedParticipantStats
   * @class
   * @extends module:model/ParticipantStats
   * @param participantId {} 
   * @param level {} 
   * @param kills {} 
   * @param deaths {} 
   * @param assists {} 
   * @param creepScore {} 
   * @param totalGold {} 
   * @param currentHealth {} 
   * @param maxHealth {} 
   * @param totalGoldEarned {} 
   * @param killParticipation {} 
   * @param championDamageShare {} 
   * @param wardsPlaced {} 
   * @param wardsDestroyed {} 
   * @param attackDamage {} 
   * @param abilityPower {} 
   * @param criticalChance {} 
   * @param attackSpeed {} 
   * @param lifeSteal {} 
   * @param armor {} 
   * @param magicResistance {} 
   * @param tenacity {} 
   * @param items {} Contains the item Ids of the items in the inventory 
   * @param perkMetadata {} 
   * @param abilities {} 
   */
  constructor(participantId, level, kills, deaths, assists, creepScore, totalGold, currentHealth, maxHealth, totalGoldEarned, killParticipation, championDamageShare, wardsPlaced, wardsDestroyed, attackDamage, abilityPower, criticalChance, attackSpeed, lifeSteal, armor, magicResistance, tenacity, items, perkMetadata, abilities) {
    super(participantId, level, kills, deaths, assists, creepScore, totalGold, currentHealth, maxHealth);
    this.totalGoldEarned = totalGoldEarned;
    this.killParticipation = killParticipation;
    this.championDamageShare = championDamageShare;
    this.wardsPlaced = wardsPlaced;
    this.wardsDestroyed = wardsDestroyed;
    this.attackDamage = attackDamage;
    this.abilityPower = abilityPower;
    this.criticalChance = criticalChance;
    this.attackSpeed = attackSpeed;
    this.lifeSteal = lifeSteal;
    this.armor = armor;
    this.magicResistance = magicResistance;
    this.tenacity = tenacity;
    this.items = items;
    this.perkMetadata = perkMetadata;
    this.abilities = abilities;
  }

  /**
   * Constructs a <code>ExtendedParticipantStats</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ExtendedParticipantStats} obj Optional instance to populate.
   * @return {module:model/ExtendedParticipantStats} The populated <code>ExtendedParticipantStats</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ExtendedParticipantStats();
      ParticipantStats.constructFromObject(data, obj);
      if (data.hasOwnProperty('totalGoldEarned'))
        obj.totalGoldEarned = ApiClient.convertToType(data['totalGoldEarned'], 'Number');
      if (data.hasOwnProperty('killParticipation'))
        obj.killParticipation = ApiClient.convertToType(data['killParticipation'], 'Number');
      if (data.hasOwnProperty('championDamageShare'))
        obj.championDamageShare = ApiClient.convertToType(data['championDamageShare'], 'Number');
      if (data.hasOwnProperty('wardsPlaced'))
        obj.wardsPlaced = ApiClient.convertToType(data['wardsPlaced'], 'Number');
      if (data.hasOwnProperty('wardsDestroyed'))
        obj.wardsDestroyed = ApiClient.convertToType(data['wardsDestroyed'], 'Number');
      if (data.hasOwnProperty('attackDamage'))
        obj.attackDamage = ApiClient.convertToType(data['attackDamage'], 'Number');
      if (data.hasOwnProperty('abilityPower'))
        obj.abilityPower = ApiClient.convertToType(data['abilityPower'], 'Number');
      if (data.hasOwnProperty('criticalChance'))
        obj.criticalChance = ApiClient.convertToType(data['criticalChance'], 'Number');
      if (data.hasOwnProperty('attackSpeed'))
        obj.attackSpeed = ApiClient.convertToType(data['attackSpeed'], 'Number');
      if (data.hasOwnProperty('lifeSteal'))
        obj.lifeSteal = ApiClient.convertToType(data['lifeSteal'], 'Number');
      if (data.hasOwnProperty('armor'))
        obj.armor = ApiClient.convertToType(data['armor'], 'Number');
      if (data.hasOwnProperty('magicResistance'))
        obj.magicResistance = ApiClient.convertToType(data['magicResistance'], 'Number');
      if (data.hasOwnProperty('tenacity'))
        obj.tenacity = ApiClient.convertToType(data['tenacity'], 'Number');
      if (data.hasOwnProperty('items'))
        obj.items = ApiClient.convertToType(data['items'], ['Number']);
      if (data.hasOwnProperty('perkMetadata'))
        obj.perkMetadata = PerkMetadata.constructFromObject(data['perkMetadata']);
      if (data.hasOwnProperty('abilities'))
        obj.abilities = Abilities.constructFromObject(data['abilities']);
    }
    return obj;
  }
}

/**
 * @member {Number} totalGoldEarned
 */
ExtendedParticipantStats.prototype.totalGoldEarned = undefined;

/**
 * @member {Number} killParticipation
 */
ExtendedParticipantStats.prototype.killParticipation = undefined;

/**
 * @member {Number} championDamageShare
 */
ExtendedParticipantStats.prototype.championDamageShare = undefined;

/**
 * @member {Number} wardsPlaced
 */
ExtendedParticipantStats.prototype.wardsPlaced = undefined;

/**
 * @member {Number} wardsDestroyed
 */
ExtendedParticipantStats.prototype.wardsDestroyed = undefined;

/**
 * @member {Number} attackDamage
 */
ExtendedParticipantStats.prototype.attackDamage = undefined;

/**
 * @member {Number} abilityPower
 */
ExtendedParticipantStats.prototype.abilityPower = undefined;

/**
 * @member {Number} criticalChance
 */
ExtendedParticipantStats.prototype.criticalChance = undefined;

/**
 * @member {Number} attackSpeed
 */
ExtendedParticipantStats.prototype.attackSpeed = undefined;

/**
 * @member {Number} lifeSteal
 */
ExtendedParticipantStats.prototype.lifeSteal = undefined;

/**
 * @member {Number} armor
 */
ExtendedParticipantStats.prototype.armor = undefined;

/**
 * @member {Number} magicResistance
 */
ExtendedParticipantStats.prototype.magicResistance = undefined;

/**
 * @member {Number} tenacity
 */
ExtendedParticipantStats.prototype.tenacity = undefined;

/**
 * Contains the item Ids of the items in the inventory 
 * @member {Array.<Number>} items
 */
ExtendedParticipantStats.prototype.items = undefined;

/**
 * @member {module:model/PerkMetadata} perkMetadata
 */
ExtendedParticipantStats.prototype.perkMetadata = undefined;

/**
 * @member {module:model/Abilities} abilities
 */
ExtendedParticipantStats.prototype.abilities = undefined;

