/*
 * Lolesports Api
 * Unofficial documentation to the lolesports Api
 *
 * OpenAPI spec version: 1.0.0-alpha-1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.27
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {HighlanderPlayerChampions} from './HighlanderPlayerChampions';

/**
 * The HighlanderPlayer model module.
 * @module model/HighlanderPlayer
 * @version 1.0.0-alpha-1
 */
export class HighlanderPlayer {
  /**
   * Constructs a new <code>HighlanderPlayer</code>.
   * @alias module:model/HighlanderPlayer
   * @class
   * @param id {Number} The player ID
   * @param slug {String} URL friendly version of the player's in game name
   * @param name {String} The player's in game name
   * @param firstName {String} 
   * @param roleSlug {String} The role they usually play
   * @param photoUrl {String} URL to the player's photo
   * @param hometown {String} 
   * @param region {String} 
   * @param birthdate {Date} 
   * @param createdAt {Date} The date and time when this entry was created.
   * @param updatedAt {Date} The date and time when this entry was last updated.
   * @param bios {Object.<String, String>} Contains a description of the player translated to various languages.  The keys are presented in the format ([ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) and [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))  `{languageCode}_{countryCode}`  The value is a string containing html tags representing the description in that specific locale. 
   * @param foreignIds {Object} 
   * @param socialNetworks {Object.<String, String>} Contains links to the player's social media accounts.  The key is the name of the social media platform and the value is the URL 
   * @param champions {Array.<module:model/HighlanderPlayerChampions>} 
   */
  constructor(id, slug, name, firstName, roleSlug, photoUrl, hometown, region, birthdate, createdAt, updatedAt, bios, foreignIds, socialNetworks, champions) {
    this.id = id;
    this.slug = slug;
    this.name = name;
    this.firstName = firstName;
    this.roleSlug = roleSlug;
    this.photoUrl = photoUrl;
    this.hometown = hometown;
    this.region = region;
    this.birthdate = birthdate;
    this.createdAt = createdAt;
    this.updatedAt = updatedAt;
    this.bios = bios;
    this.foreignIds = foreignIds;
    this.socialNetworks = socialNetworks;
    this.champions = champions;
  }

  /**
   * Constructs a <code>HighlanderPlayer</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/HighlanderPlayer} obj Optional instance to populate.
   * @return {module:model/HighlanderPlayer} The populated <code>HighlanderPlayer</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new HighlanderPlayer();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('slug'))
        obj.slug = ApiClient.convertToType(data['slug'], 'String');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('firstName'))
        obj.firstName = ApiClient.convertToType(data['firstName'], 'String');
      if (data.hasOwnProperty('LastName'))
        obj.lastName = ApiClient.convertToType(data['LastName'], 'String');
      if (data.hasOwnProperty('roleSlug'))
        obj.roleSlug = ApiClient.convertToType(data['roleSlug'], 'String');
      if (data.hasOwnProperty('photoUrl'))
        obj.photoUrl = ApiClient.convertToType(data['photoUrl'], 'String');
      if (data.hasOwnProperty('hometown'))
        obj.hometown = ApiClient.convertToType(data['hometown'], 'String');
      if (data.hasOwnProperty('region'))
        obj.region = ApiClient.convertToType(data['region'], 'String');
      if (data.hasOwnProperty('birthdate'))
        obj.birthdate = ApiClient.convertToType(data['birthdate'], 'Date');
      if (data.hasOwnProperty('createdAt'))
        obj.createdAt = ApiClient.convertToType(data['createdAt'], 'Date');
      if (data.hasOwnProperty('updatedAt'))
        obj.updatedAt = ApiClient.convertToType(data['updatedAt'], 'Date');
      if (data.hasOwnProperty('bios'))
        obj.bios = ApiClient.convertToType(data['bios'], {'String': 'String'});
      if (data.hasOwnProperty('foreignIds'))
        obj.foreignIds = ApiClient.convertToType(data['foreignIds'], Object);
      if (data.hasOwnProperty('socialNetworks'))
        obj.socialNetworks = ApiClient.convertToType(data['socialNetworks'], {'String': 'String'});
      if (data.hasOwnProperty('champions'))
        obj.champions = ApiClient.convertToType(data['champions'], [HighlanderPlayerChampions]);
    }
    return obj;
  }
}

/**
 * The player ID
 * @member {Number} id
 */
HighlanderPlayer.prototype.id = undefined;

/**
 * URL friendly version of the player's in game name
 * @member {String} slug
 */
HighlanderPlayer.prototype.slug = undefined;

/**
 * The player's in game name
 * @member {String} name
 */
HighlanderPlayer.prototype.name = undefined;

/**
 * @member {String} firstName
 */
HighlanderPlayer.prototype.firstName = undefined;

/**
 * @member {String} lastName
 */
HighlanderPlayer.prototype.lastName = undefined;

/**
 * The role they usually play
 * @member {String} roleSlug
 */
HighlanderPlayer.prototype.roleSlug = undefined;

/**
 * URL to the player's photo
 * @member {String} photoUrl
 */
HighlanderPlayer.prototype.photoUrl = undefined;

/**
 * @member {String} hometown
 */
HighlanderPlayer.prototype.hometown = undefined;

/**
 * @member {String} region
 */
HighlanderPlayer.prototype.region = undefined;

/**
 * @member {Date} birthdate
 */
HighlanderPlayer.prototype.birthdate = undefined;

/**
 * The date and time when this entry was created.
 * @member {Date} createdAt
 */
HighlanderPlayer.prototype.createdAt = undefined;

/**
 * The date and time when this entry was last updated.
 * @member {Date} updatedAt
 */
HighlanderPlayer.prototype.updatedAt = undefined;

/**
 * Contains a description of the player translated to various languages.  The keys are presented in the format ([ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) and [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))  `{languageCode}_{countryCode}`  The value is a string containing html tags representing the description in that specific locale. 
 * @member {Object.<String, String>} bios
 */
HighlanderPlayer.prototype.bios = undefined;

/**
 * @member {Object} foreignIds
 */
HighlanderPlayer.prototype.foreignIds = undefined;

/**
 * Contains links to the player's social media accounts.  The key is the name of the social media platform and the value is the URL 
 * @member {Object.<String, String>} socialNetworks
 */
HighlanderPlayer.prototype.socialNetworks = undefined;

/**
 * @member {Array.<module:model/HighlanderPlayerChampions>} champions
 */
HighlanderPlayer.prototype.champions = undefined;

