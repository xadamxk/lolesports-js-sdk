/*
 * Lolesports Api
 * Unofficial documentation to the lolesports Api
 *
 * OpenAPI spec version: 1.0.0-alpha-1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.27
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {ParticipantStats} from './ParticipantStats';

/**
 * The TeamStats model module.
 * @module model/TeamStats
 * @version 1.0.0-alpha-1
 */
export class TeamStats {
  /**
   * Constructs a new <code>TeamStats</code>.
   * @alias module:model/TeamStats
   * @class
   * @param totalGold {Number} 
   * @param inhibitors {Number} 
   * @param towers {Number} 
   * @param barons {Number} 
   * @param totalKills {Number} 
   * @param dragons {Array.<module:model/TeamStats.DragonsEnum>} 
   * @param participants {Array.<module:model/ParticipantStats>} 
   */
  constructor(totalGold, inhibitors, towers, barons, totalKills, dragons, participants) {
    this.totalGold = totalGold;
    this.inhibitors = inhibitors;
    this.towers = towers;
    this.barons = barons;
    this.totalKills = totalKills;
    this.dragons = dragons;
    this.participants = participants;
  }

  /**
   * Constructs a <code>TeamStats</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TeamStats} obj Optional instance to populate.
   * @return {module:model/TeamStats} The populated <code>TeamStats</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new TeamStats();
      if (data.hasOwnProperty('totalGold'))
        obj.totalGold = ApiClient.convertToType(data['totalGold'], 'Number');
      if (data.hasOwnProperty('inhibitors'))
        obj.inhibitors = ApiClient.convertToType(data['inhibitors'], 'Number');
      if (data.hasOwnProperty('towers'))
        obj.towers = ApiClient.convertToType(data['towers'], 'Number');
      if (data.hasOwnProperty('barons'))
        obj.barons = ApiClient.convertToType(data['barons'], 'Number');
      if (data.hasOwnProperty('totalKills'))
        obj.totalKills = ApiClient.convertToType(data['totalKills'], 'Number');
      if (data.hasOwnProperty('dragons'))
        obj.dragons = ApiClient.convertToType(data['dragons'], ['String']);
      if (data.hasOwnProperty('participants'))
        obj.participants = ApiClient.convertToType(data['participants'], [ParticipantStats]);
    }
    return obj;
  }
}

/**
 * @member {Number} totalGold
 */
TeamStats.prototype.totalGold = undefined;

/**
 * @member {Number} inhibitors
 */
TeamStats.prototype.inhibitors = undefined;

/**
 * @member {Number} towers
 */
TeamStats.prototype.towers = undefined;

/**
 * @member {Number} barons
 */
TeamStats.prototype.barons = undefined;

/**
 * @member {Number} totalKills
 */
TeamStats.prototype.totalKills = undefined;

/**
 * Allowed values for the <code>dragons</code> property.
 * @enum {String}
 * @readonly
 */
TeamStats.DragonsEnum = {
  /**
   * value: "ocean"
   * @const
   */
  ocean: "ocean",

  /**
   * value: "mountain"
   * @const
   */
  mountain: "mountain",

  /**
   * value: "infernal"
   * @const
   */
  infernal: "infernal",

  /**
   * value: "cloud"
   * @const
   */
  cloud: "cloud",

  /**
   * value: "elder"
   * @const
   */
  elder: "elder"
};
/**
 * @member {Array.<module:model/TeamStats.DragonsEnum>} dragons
 */
TeamStats.prototype.dragons = undefined;

/**
 * @member {Array.<module:model/ParticipantStats>} participants
 */
TeamStats.prototype.participants = undefined;

