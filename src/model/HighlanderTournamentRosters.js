/*
 * Lolesports Api
 * Unofficial documentation to the lolesports Api
 *
 * OpenAPI spec version: 1.0.0-alpha-1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.27
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The HighlanderTournamentRosters model module.
 * @module model/HighlanderTournamentRosters
 * @version 1.0.0-alpha-1
 */
export class HighlanderTournamentRosters {
  /**
   * Constructs a new <code>HighlanderTournamentRosters</code>.
   * @alias module:model/HighlanderTournamentRosters
   * @class
   * @param id {String} The roster ID.  It is a [UUID version 4](https://en.wikipedia.org/wiki/Universally_unique_identifier) 
   * @param name {String} The abbreviated version of the team's name.
   * @param roles {Object} 
   * @param teamReference {String} 
   * @param substitutions {Object} 
   * @param team {String} The Team ID
   */
  constructor(id, name, roles, teamReference, substitutions, team) {
    this.id = id;
    this.name = name;
    this.roles = roles;
    this.teamReference = teamReference;
    this.substitutions = substitutions;
    this.team = team;
  }

  /**
   * Constructs a <code>HighlanderTournamentRosters</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/HighlanderTournamentRosters} obj Optional instance to populate.
   * @return {module:model/HighlanderTournamentRosters} The populated <code>HighlanderTournamentRosters</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new HighlanderTournamentRosters();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('state'))
        obj.state = ApiClient.convertToType(data['state'], 'String');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('roles'))
        obj.roles = ApiClient.convertToType(data['roles'], Object);
      if (data.hasOwnProperty('teamReference'))
        obj.teamReference = ApiClient.convertToType(data['teamReference'], 'String');
      if (data.hasOwnProperty('substitutions'))
        obj.substitutions = ApiClient.convertToType(data['substitutions'], Object);
      if (data.hasOwnProperty('team'))
        obj.team = ApiClient.convertToType(data['team'], 'String');
    }
    return obj;
  }
}

/**
 * The roster ID.  It is a [UUID version 4](https://en.wikipedia.org/wiki/Universally_unique_identifier) 
 * @member {String} id
 */
HighlanderTournamentRosters.prototype.id = undefined;

/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
HighlanderTournamentRosters.StateEnum = {
  /**
   * value: "eliminated"
   * @const
   */
  eliminated: "eliminated"
};
/**
 * @member {module:model/HighlanderTournamentRosters.StateEnum} state
 */
HighlanderTournamentRosters.prototype.state = undefined;

/**
 * The abbreviated version of the team's name.
 * @member {String} name
 */
HighlanderTournamentRosters.prototype.name = undefined;

/**
 * @member {Object} roles
 */
HighlanderTournamentRosters.prototype.roles = undefined;

/**
 * @member {String} teamReference
 */
HighlanderTournamentRosters.prototype.teamReference = undefined;

/**
 * @member {Object} substitutions
 */
HighlanderTournamentRosters.prototype.substitutions = undefined;

/**
 * The Team ID
 * @member {String} team
 */
HighlanderTournamentRosters.prototype.team = undefined;

