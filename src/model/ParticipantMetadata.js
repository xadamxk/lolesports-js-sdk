/*
 * Lolesports Api
 * Unofficial documentation to the lolesports Api
 *
 * OpenAPI spec version: 1.0.0-alpha-1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.27
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {ParticipantId} from './ParticipantId';

/**
 * The ParticipantMetadata model module.
 * @module model/ParticipantMetadata
 * @version 1.0.0-alpha-1
 */
export class ParticipantMetadata {
  /**
   * Constructs a new <code>ParticipantMetadata</code>.
   * @alias module:model/ParticipantMetadata
   * @class
   * @param participantId {module:model/ParticipantId} 
   * @param summonerName {String} 
   * @param championId {String} 
   * @param role {module:model/ParticipantMetadata.RoleEnum} 
   */
  constructor(participantId, summonerName, championId, role) {
    this.participantId = participantId;
    this.summonerName = summonerName;
    this.championId = championId;
    this.role = role;
  }

  /**
   * Constructs a <code>ParticipantMetadata</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ParticipantMetadata} obj Optional instance to populate.
   * @return {module:model/ParticipantMetadata} The populated <code>ParticipantMetadata</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ParticipantMetadata();
      if (data.hasOwnProperty('participantId'))
        obj.participantId = ParticipantId.constructFromObject(data['participantId']);
      if (data.hasOwnProperty('summonerName'))
        obj.summonerName = ApiClient.convertToType(data['summonerName'], 'String');
      if (data.hasOwnProperty('championId'))
        obj.championId = ApiClient.convertToType(data['championId'], 'String');
      if (data.hasOwnProperty('role'))
        obj.role = ApiClient.convertToType(data['role'], 'String');
    }
    return obj;
  }
}

/**
 * @member {module:model/ParticipantId} participantId
 */
ParticipantMetadata.prototype.participantId = undefined;

/**
 * @member {String} summonerName
 */
ParticipantMetadata.prototype.summonerName = undefined;

/**
 * @member {String} championId
 */
ParticipantMetadata.prototype.championId = undefined;

/**
 * Allowed values for the <code>role</code> property.
 * @enum {String}
 * @readonly
 */
ParticipantMetadata.RoleEnum = {
  /**
   * value: "top"
   * @const
   */
  top: "top",

  /**
   * value: "jungle"
   * @const
   */
  jungle: "jungle",

  /**
   * value: "mid"
   * @const
   */
  mid: "mid",

  /**
   * value: "bottom"
   * @const
   */
  bottom: "bottom",

  /**
   * value: "support"
   * @const
   */
  support: "support"
};
/**
 * @member {module:model/ParticipantMetadata.RoleEnum} role
 */
ParticipantMetadata.prototype.role = undefined;

// Implement OneOfteamMetadataParticipantMetadataItems interface:
