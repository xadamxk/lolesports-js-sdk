/*
 * Lolesports Api
 * Unofficial documentation to the lolesports Api
 *
 * OpenAPI spec version: 1.0.0-alpha-1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.27
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The HighlanderRecord model module.
 * @module model/HighlanderRecord
 * @version 1.0.0-alpha-1
 */
export class HighlanderRecord {
  /**
   * Constructs a new <code>HighlanderRecord</code>.
   * @alias module:model/HighlanderRecord
   * @class
   * @param wins {Number} 
   * @param losses {Number} 
   * @param ties {Number} 
   * @param score {Number} 
   * @param roster {String} The roster's [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier)
   * @param tournament {String} The tournament's [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier)
   * @param bracket {String} The bracket's [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier)
   * @param id {String} A combination of the bracket and roster UUIDs. The two are separated by a colon\\ 
   */
  constructor(wins, losses, ties, score, roster, tournament, bracket, id) {
    this.wins = wins;
    this.losses = losses;
    this.ties = ties;
    this.score = score;
    this.roster = roster;
    this.tournament = tournament;
    this.bracket = bracket;
    this.id = id;
  }

  /**
   * Constructs a <code>HighlanderRecord</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/HighlanderRecord} obj Optional instance to populate.
   * @return {module:model/HighlanderRecord} The populated <code>HighlanderRecord</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new HighlanderRecord();
      if (data.hasOwnProperty('wins'))
        obj.wins = ApiClient.convertToType(data['wins'], 'Number');
      if (data.hasOwnProperty('losses'))
        obj.losses = ApiClient.convertToType(data['losses'], 'Number');
      if (data.hasOwnProperty('ties'))
        obj.ties = ApiClient.convertToType(data['ties'], 'Number');
      if (data.hasOwnProperty('score'))
        obj.score = ApiClient.convertToType(data['score'], 'Number');
      if (data.hasOwnProperty('roster'))
        obj.roster = ApiClient.convertToType(data['roster'], 'String');
      if (data.hasOwnProperty('tournament'))
        obj.tournament = ApiClient.convertToType(data['tournament'], 'String');
      if (data.hasOwnProperty('bracket'))
        obj.bracket = ApiClient.convertToType(data['bracket'], 'String');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
    }
    return obj;
  }
}

/**
 * @member {Number} wins
 */
HighlanderRecord.prototype.wins = undefined;

/**
 * @member {Number} losses
 */
HighlanderRecord.prototype.losses = undefined;

/**
 * @member {Number} ties
 */
HighlanderRecord.prototype.ties = undefined;

/**
 * @member {Number} score
 */
HighlanderRecord.prototype.score = undefined;

/**
 * The roster's [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier)
 * @member {String} roster
 */
HighlanderRecord.prototype.roster = undefined;

/**
 * The tournament's [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier)
 * @member {String} tournament
 */
HighlanderRecord.prototype.tournament = undefined;

/**
 * The bracket's [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier)
 * @member {String} bracket
 */
HighlanderRecord.prototype.bracket = undefined;

/**
 * A combination of the bracket and roster UUIDs. The two are separated by a colon\\ 
 * @member {String} id
 */
HighlanderRecord.prototype.id = undefined;

