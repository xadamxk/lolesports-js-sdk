/*
 * Lolesports Api
 * Unofficial documentation to the lolesports Api
 *
 * OpenAPI spec version: 1.0.0-alpha-1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.27
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {MatchTypeOptions} from './MatchTypeOptions';

/**
 * The MatchType model module.
 * @module model/MatchType
 * @version 1.0.0-alpha-1
 */
export class MatchType {
  /**
   * Constructs a new <code>MatchType</code>.
   * @alias module:model/MatchType
   * @class
   * @param identifier {module:model/MatchType.IdentifierEnum} 
   */
  constructor(identifier) {
    this.identifier = identifier;
  }

  /**
   * Constructs a <code>MatchType</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/MatchType} obj Optional instance to populate.
   * @return {module:model/MatchType} The populated <code>MatchType</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new MatchType();
      if (data.hasOwnProperty('identifier'))
        obj.identifier = ApiClient.convertToType(data['identifier'], 'String');
      if (data.hasOwnProperty('options'))
        obj.options = MatchTypeOptions.constructFromObject(data['options']);
    }
    return obj;
  }
}

/**
 * Allowed values for the <code>identifier</code> property.
 * @enum {String}
 * @readonly
 */
MatchType.IdentifierEnum = {
  /**
   * value: "bestOf"
   * @const
   */
  bestOf: "bestOf",

  /**
   * value: "single_elim"
   * @const
   */
  singleElim: "single_elim"
};
/**
 * @member {module:model/MatchType.IdentifierEnum} identifier
 */
MatchType.prototype.identifier = undefined;

/**
 * @member {module:model/MatchTypeOptions} options
 */
MatchType.prototype.options = undefined;

