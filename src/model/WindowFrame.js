/*
 * Lolesports Api
 * Unofficial documentation to the lolesports Api
 *
 * OpenAPI spec version: 1.0.0-alpha-1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.27
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {BaseFrame} from './BaseFrame';
import {TeamStats} from './TeamStats';

/**
 * The WindowFrame model module.
 * @module model/WindowFrame
 * @version 1.0.0-alpha-1
 */
export class WindowFrame extends BaseFrame {
  /**
   * Constructs a new <code>WindowFrame</code>.
   * @alias module:model/WindowFrame
   * @class
   * @extends module:model/BaseFrame
   * @param rfc460Timestamp {} 
   * @param gameState {} 
   * @param blueTeam {} 
   * @param redTeam {} 
   */
  constructor(rfc460Timestamp, gameState, blueTeam, redTeam) {
    super(rfc460Timestamp);
    this.rfc460Timestamp = rfc460Timestamp;
    this.gameState = gameState;
    this.blueTeam = blueTeam;
    this.redTeam = redTeam;
  }

  /**
   * Constructs a <code>WindowFrame</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/WindowFrame} obj Optional instance to populate.
   * @return {module:model/WindowFrame} The populated <code>WindowFrame</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new WindowFrame();
      BaseFrame.constructFromObject(data, obj);
      if (data.hasOwnProperty('rfc460Timestamp'))
        obj.rfc460Timestamp = ApiClient.convertToType(data['rfc460Timestamp'], 'Date');
      if (data.hasOwnProperty('gameState'))
        obj.gameState = ApiClient.convertToType(data['gameState'], 'String');
      if (data.hasOwnProperty('blueTeam'))
        obj.blueTeam = TeamStats.constructFromObject(data['blueTeam']);
      if (data.hasOwnProperty('redTeam'))
        obj.redTeam = TeamStats.constructFromObject(data['redTeam']);
    }
    return obj;
  }
}

/**
 * @member {Date} rfc460Timestamp
 */
WindowFrame.prototype.rfc460Timestamp = undefined;

/**
 * Allowed values for the <code>gameState</code> property.
 * @enum {String}
 * @readonly
 */
WindowFrame.GameStateEnum = {
  /**
   * value: "in_game"
   * @const
   */
  inGame: "in_game",

  /**
   * value: "finished"
   * @const
   */
  finished: "finished"
};
/**
 * @member {module:model/WindowFrame.GameStateEnum} gameState
 */
WindowFrame.prototype.gameState = undefined;

/**
 * @member {module:model/TeamStats} blueTeam
 */
WindowFrame.prototype.blueTeam = undefined;

/**
 * @member {module:model/TeamStats} redTeam
 */
WindowFrame.prototype.redTeam = undefined;

