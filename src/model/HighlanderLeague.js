/*
 * Lolesports Api
 * Unofficial documentation to the lolesports Api
 *
 * OpenAPI spec version: 1.0.0-alpha-1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.27
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {BaseLeague} from './BaseLeague';

/**
 * The HighlanderLeague model module.
 * @module model/HighlanderLeague
 * @version 1.0.0-alpha-1
 */
export class HighlanderLeague extends BaseLeague {
  /**
   * Constructs a new <code>HighlanderLeague</code>.
   * @alias module:model/HighlanderLeague
   * @class
   * @extends module:model/BaseLeague
   * @param name {} The name of the league
   * @param slug {} URL friendly version of the league's name
   * @param id {} The league's ID
   * @param guid {} The [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) for the league. 
   * @param region {} 
   * @param drupalId {} 
   * @param logoUrl {} 
   * @param createdAt {} The date and time when this entry was created.
   * @param updatedAt {} The date and time when this entry was last updated.
   * @param abouts {} Contains a description of the league translated in various languages.  The keys are presented in the format ([ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) and [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))  `{languageCode}_{countryCode}`  The value is a string containing html tags representing the description in that specific locale. 
   * @param names {} Contains the names of the league translated in various languages.  The keys are presented in the format ([ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) and [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))  `{languageCode}_{countryCode}`  The value is a string containing the name of the league in that specific locale. 
   */
  constructor(name, slug, id, guid, region, drupalId, logoUrl, createdAt, updatedAt, abouts, names) {
    super(name, slug);
    this.id = id;
    this.guid = guid;
    this.region = region;
    this.drupalId = drupalId;
    this.logoUrl = logoUrl;
    this.createdAt = createdAt;
    this.updatedAt = updatedAt;
    this.abouts = abouts;
    this.names = names;
  }

  /**
   * Constructs a <code>HighlanderLeague</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/HighlanderLeague} obj Optional instance to populate.
   * @return {module:model/HighlanderLeague} The populated <code>HighlanderLeague</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new HighlanderLeague();
      BaseLeague.constructFromObject(data, obj);
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('guid'))
        obj.guid = ApiClient.convertToType(data['guid'], 'String');
      if (data.hasOwnProperty('region'))
        obj.region = ApiClient.convertToType(data['region'], 'String');
      if (data.hasOwnProperty('drupalId'))
        obj.drupalId = ApiClient.convertToType(data['drupalId'], 'Number');
      if (data.hasOwnProperty('logoUrl'))
        obj.logoUrl = ApiClient.convertToType(data['logoUrl'], 'String');
      if (data.hasOwnProperty('createdAt'))
        obj.createdAt = ApiClient.convertToType(data['createdAt'], 'Date');
      if (data.hasOwnProperty('updatedAt'))
        obj.updatedAt = ApiClient.convertToType(data['updatedAt'], 'Date');
      if (data.hasOwnProperty('abouts'))
        obj.abouts = ApiClient.convertToType(data['abouts'], {'String': 'String'});
      if (data.hasOwnProperty('names'))
        obj.names = ApiClient.convertToType(data['names'], {'String': 'String'});
      if (data.hasOwnProperty('tournaments'))
        obj.tournaments = ApiClient.convertToType(data['tournaments'], ['String']);
    }
    return obj;
  }
}

/**
 * The league's ID
 * @member {Number} id
 */
HighlanderLeague.prototype.id = undefined;

/**
 * The [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) for the league. 
 * @member {String} guid
 */
HighlanderLeague.prototype.guid = undefined;

/**
 * @member {String} region
 */
HighlanderLeague.prototype.region = undefined;

/**
 * @member {Number} drupalId
 */
HighlanderLeague.prototype.drupalId = undefined;

/**
 * @member {String} logoUrl
 */
HighlanderLeague.prototype.logoUrl = undefined;

/**
 * The date and time when this entry was created.
 * @member {Date} createdAt
 */
HighlanderLeague.prototype.createdAt = undefined;

/**
 * The date and time when this entry was last updated.
 * @member {Date} updatedAt
 */
HighlanderLeague.prototype.updatedAt = undefined;

/**
 * Contains a description of the league translated in various languages.  The keys are presented in the format ([ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) and [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))  `{languageCode}_{countryCode}`  The value is a string containing html tags representing the description in that specific locale. 
 * @member {Object.<String, String>} abouts
 */
HighlanderLeague.prototype.abouts = undefined;

/**
 * Contains the names of the league translated in various languages.  The keys are presented in the format ([ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) and [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))  `{languageCode}_{countryCode}`  The value is a string containing the name of the league in that specific locale. 
 * @member {Object.<String, String>} names
 */
HighlanderLeague.prototype.names = undefined;

/**
 * An array containing the [UUIDs](https://en.wikipedia.org/wiki/Universally_unique_identifier) for the tournaments in this league. 
 * @member {Array.<String>} tournaments
 */
HighlanderLeague.prototype.tournaments = undefined;

