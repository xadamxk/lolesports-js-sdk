/*
 * Lolesports Api
 * Unofficial documentation to the lolesports Api
 *
 * OpenAPI spec version: 1.0.0-alpha-1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.27
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The Tags model module.
 * @module model/Tags
 * @version 1.0.0-alpha-1
 */
export class Tags {
  /**
   * Constructs a new <code>Tags</code>.
   * The labels are used to describe the week and day the match/event is taking place in. Also, it could indicate the stage of the tournament.  The blockPrefix comes before the block Label. Same with the subBlockPrefix and the subBlockLabel. 
   * @alias module:model/Tags
   * @class
   * @param subBlockLabel {String} 
   * @param blockLabel {String} 
   * @param leagueLabel {String} 
   * @param subBlockPrefix {String} 
   * @param tournamentLabel {String} Contains the tournament ID. 
   */
  constructor(subBlockLabel, blockLabel, leagueLabel, subBlockPrefix, tournamentLabel) {
    this.subBlockLabel = subBlockLabel;
    this.blockLabel = blockLabel;
    this.leagueLabel = leagueLabel;
    this.subBlockPrefix = subBlockPrefix;
    this.tournamentLabel = tournamentLabel;
  }

  /**
   * Constructs a <code>Tags</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Tags} obj Optional instance to populate.
   * @return {module:model/Tags} The populated <code>Tags</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Tags();
      if (data.hasOwnProperty('subBlockLabel'))
        obj.subBlockLabel = ApiClient.convertToType(data['subBlockLabel'], 'String');
      if (data.hasOwnProperty('blockLabel'))
        obj.blockLabel = ApiClient.convertToType(data['blockLabel'], 'String');
      if (data.hasOwnProperty('leagueLabel'))
        obj.leagueLabel = ApiClient.convertToType(data['leagueLabel'], 'String');
      if (data.hasOwnProperty('blockPrefix'))
        obj.blockPrefix = ApiClient.convertToType(data['blockPrefix'], 'String');
      if (data.hasOwnProperty('subBlockPrefix'))
        obj.subBlockPrefix = ApiClient.convertToType(data['subBlockPrefix'], 'String');
      if (data.hasOwnProperty('yearLabel'))
        obj.yearLabel = ApiClient.convertToType(data['yearLabel'], 'String');
      if (data.hasOwnProperty('stageLabel'))
        obj.stageLabel = ApiClient.convertToType(data['stageLabel'], 'String');
      if (data.hasOwnProperty('tournamentLabel'))
        obj.tournamentLabel = ApiClient.convertToType(data['tournamentLabel'], 'String');
    }
    return obj;
  }
}

/**
 * @member {String} subBlockLabel
 */
Tags.prototype.subBlockLabel = undefined;

/**
 * @member {String} blockLabel
 */
Tags.prototype.blockLabel = undefined;

/**
 * @member {String} leagueLabel
 */
Tags.prototype.leagueLabel = undefined;

/**
 * @member {String} blockPrefix
 */
Tags.prototype.blockPrefix = undefined;

/**
 * @member {String} subBlockPrefix
 */
Tags.prototype.subBlockPrefix = undefined;

/**
 * @member {String} yearLabel
 */
Tags.prototype.yearLabel = undefined;

/**
 * Contains the tournament and bracket Ids the match/event belongs to. 
 * @member {String} stageLabel
 */
Tags.prototype.stageLabel = undefined;

/**
 * Contains the tournament ID. 
 * @member {String} tournamentLabel
 */
Tags.prototype.tournamentLabel = undefined;

