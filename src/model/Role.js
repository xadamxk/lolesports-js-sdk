/*
 * Lolesports Api
 * Unofficial documentation to the lolesports Api
 *
 * OpenAPI spec version: 1.0.0-alpha-1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.27
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The Role model module.
 * @module model/Role
 * @version 1.0.0-alpha-1
 */
export class Role {
  /**
   * Constructs a new <code>Role</code>.
   * @alias module:model/Role
   * @class
   * @param origin {module:model/Role.OriginEnum} 
   * @param region {module:model/Role.RegionEnum} 
   * @param summonerName {module:model/Role.SummonerNameEnum} 
   * @param summonerLevel {module:model/Role.SummonerLevelEnum} 
   * @param profileIconId {module:model/Role.ProfileIconIdEnum} 
   * @param admin {Boolean} 
   */
  constructor(origin, region, summonerName, summonerLevel, profileIconId, admin) {
    this.origin = origin;
    this.region = region;
    this.summonerName = summonerName;
    this.summonerLevel = summonerLevel;
    this.profileIconId = profileIconId;
    this.admin = admin;
  }

  /**
   * Constructs a <code>Role</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Role} obj Optional instance to populate.
   * @return {module:model/Role} The populated <code>Role</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Role();
      if (data.hasOwnProperty('origin'))
        obj.origin = ApiClient.convertToType(data['origin'], 'String');
      if (data.hasOwnProperty('region'))
        obj.region = ApiClient.convertToType(data['region'], 'String');
      if (data.hasOwnProperty('summonerName'))
        obj.summonerName = ApiClient.convertToType(data['summonerName'], 'String');
      if (data.hasOwnProperty('summonerLevel'))
        obj.summonerLevel = ApiClient.convertToType(data['summonerLevel'], 'Number');
      if (data.hasOwnProperty('profileIconId'))
        obj.profileIconId = ApiClient.convertToType(data['profileIconId'], 'Number');
      if (data.hasOwnProperty('admin'))
        obj.admin = ApiClient.convertToType(data['admin'], 'Boolean');
    }
    return obj;
  }
}

/**
 * Allowed values for the <code>origin</code> property.
 * @enum {String}
 * @readonly
 */
Role.OriginEnum = {
  /**
   * value: "BEARER_TOKEN"
   * @const
   */
  BEARER_TOKEN: "BEARER_TOKEN"
};
/**
 * @member {module:model/Role.OriginEnum} origin
 */
Role.prototype.origin = undefined;

/**
 * Allowed values for the <code>region</code> property.
 * @enum {String}
 * @readonly
 */
Role.RegionEnum = {
  /**
   * value: "global"
   * @const
   */
  global: "global"
};
/**
 * @member {module:model/Role.RegionEnum} region
 */
Role.prototype.region = undefined;

/**
 * Allowed values for the <code>summonerName</code> property.
 * @enum {String}
 * @readonly
 */
Role.SummonerNameEnum = {
  /**
   * value: "test-user"
   * @const
   */
  testUser: "test-user"
};
/**
 * @member {module:model/Role.SummonerNameEnum} summonerName
 */
Role.prototype.summonerName = undefined;

/**
 * Allowed values for the <code>summonerLevel</code> property.
 * @enum {Number}
 * @readonly
 */
Role.SummonerLevelEnum = {
  /**
   * value: 0
   * @const
   */
  _0: 0
};
/**
 * @member {module:model/Role.SummonerLevelEnum} summonerLevel
 */
Role.prototype.summonerLevel = undefined;

/**
 * Allowed values for the <code>profileIconId</code> property.
 * @enum {Number}
 * @readonly
 */
Role.ProfileIconIdEnum = {
  /**
   * value: 0
   * @const
   */
  _0: 0
};
/**
 * @member {module:model/Role.ProfileIconIdEnum} profileIconId
 */
Role.prototype.profileIconId = undefined;

/**
 * @member {Boolean} admin
 */
Role.prototype.admin = undefined;

